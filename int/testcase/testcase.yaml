- method: AddPod
  requests:
    name@:
      - local0
      - local1
      - local2
      - local3
      - local4
      - local5
    desc@:
      - ''
      - c
      - d
  asserts:
    for_each:
      equals:
        - actual: etcdctl get --print-value-only /eru/pod/info/$(jq -r '.name' <<<$req) | jq -r '.name'
          expected: jq -r '.name' <<<$req
        - actual: etcdctl get --print-value-only /eru/pod/info/$(jq -r '.name' <<<$req) | jq -r '.name'
          expected: jq -r '.name' <<<$req
        - actual: jq -r '.name' <<<$resp
          expected: jq -r '.name' <<<$req
        - actual: jq -r '.desc' <<<$resp
          expected: jq -r '.desc' <<<$req

- method: CreateWorkload
  requests:
    name: zc
    entrypoint:
      name: zc
      command: sleep 1000000
    podname: test
    image: bash
    count: 2
    resource_opts:
      cpu_quota_limit: 0.1
      cpu_bind: true
      memory_limit: 14000000
  asserts:
    for_each:
      equals:
        - actual: jq -r '.podname' <<<$resp
          expected: jq -r '.podname' <<<$req
        - actual: docker inspect $(jq -r '.id' <<<$resp) | jq -r '.[0].HostConfig.CpusetCpus' | awk -F, '{print NF}'
          expected: echo 1
    after_completion:
      equals:
        - actual: eru-cli -o json workload list | jq length
          expected: echo 1
      run_success:
        - test -p /tmp/fifo || mkfifo /tmp/fifo; echo -e $resps | jq '.id' | jq -sc > /tmp/fifo

- method: RemoveWorkload
  requests:
    ids: $bash(test -p /tmp/fifo || mkfifo /tmp/fifo; cat /tmp/fifo)
    force: true
  asserts:
    for_each:
      equals:
        - actual: jq -r '.id' <<<$resp
          expected: jq -r '.id' <<<$req
        - actual: eru-cli -o json workload get $(jq -r '.id' <<<$req) || echo not found
          expected: echo not found
        - actual: etcdctl get /eru/ --prefix | grep $(jq -r '.id' <<<$req) -c
          expected: echo 0
